#!/usr/bin/env swift

import Foundation

print("üîç Testing Verified Contacts Only Picker...")

// Read the ComposeView file
let composeViewPath = "WhisperApp/UI/Compose/ComposeView.swift"
guard let composeViewContent = try? String(contentsOfFile: composeViewPath) else {
    print("‚ùå Could not read ComposeView.swift")
    exit(1)
}

var issues: [String] = []

// Check 1: Toggle for "Show only verified contacts" should be removed
if composeViewContent.contains("Toggle(\"Show only verified contacts\"") {
    issues.append("‚ùå 'Show only verified contacts' toggle still present (should be removed)")
} else {
    print("‚úÖ 'Show only verified contacts' toggle removed")
}

// Check 2: Should use verifiedContacts computed property
if composeViewContent.contains("private var verifiedContacts: [Contact]") {
    print("‚úÖ verifiedContacts computed property added")
} else {
    issues.append("‚ùå verifiedContacts computed property missing")
}

// Check 3: Should filter for verified contacts only
if composeViewContent.contains("contactManager.contacts.filter { $0.trustLevel == .verified }") {
    print("‚úÖ Filtering for verified contacts only")
} else {
    issues.append("‚ùå Not filtering for verified contacts")
}

// Check 4: Should use verifiedContacts in ForEach
if composeViewContent.contains("ForEach(verifiedContacts, id: \\.id)") {
    print("‚úÖ Using verifiedContacts in list")
} else if composeViewContent.contains("ForEach(contactManager.contacts, id: \\.id)") {
    issues.append("‚ùå Still using all contacts instead of verified contacts")
}

// Check 5: Empty state should be specific to verified contacts
if composeViewContent.contains("No Verified Contacts") && 
   composeViewContent.contains("You don't have any verified contacts yet") {
    print("‚úÖ Appropriate empty state for verified contacts")
} else {
    issues.append("‚ùå Empty state not updated for verified contacts only")
}

// Check 6: Should call loadVerifiedContactsOnly instead of loadContacts
if composeViewContent.contains("contactManager.loadVerifiedContactsOnly()") {
    print("‚úÖ Loading verified contacts only")
} else if composeViewContent.contains("contactManager.loadContacts()") {
    issues.append("‚ùå Still loading all contacts instead of verified only")
}

// Check 7: Unverified warning should be removed from ContactPickerRowView
if composeViewContent.contains("// Warning for unverified contacts") ||
   composeViewContent.contains("exclamationmark.triangle.fill") ||
   composeViewContent.contains("Unverified") {
    issues.append("‚ùå Unverified contact warning still present (not needed for verified-only list)")
} else {
    print("‚úÖ Unverified contact warning removed")
}

// Check 8: Contact count indicator should be removed
if composeViewContent.contains("\\(contactManager.contacts.count) contacts") {
    issues.append("‚ùå Contact count indicator still present (should be removed)")
} else {
    print("‚úÖ Contact count indicator removed")
}

// Check 9: "Show All Contacts" button should be removed
if composeViewContent.contains("Show All Contacts") {
    issues.append("‚ùå 'Show All Contacts' button still present (should be removed)")
} else {
    print("‚úÖ 'Show All Contacts' button removed")
}

// Summary
if issues.isEmpty {
    print("\nüéâ Verified contacts only picker successfully implemented!")
    print("üîí Only verified contacts are shown in the picker")
    print("üéØ Cleaner interface without unnecessary toggles")
    print("‚ö° Simplified user experience for secure messaging")
} else {
    print("\n‚ö†Ô∏è Found \(issues.count) issues with verified contacts only implementation:")
    for issue in issues {
        print("   \(issue)")
    }
    exit(1)
}

print("\nüìã Changes Made:")
print("‚Ä¢ Removed 'Show only verified contacts' toggle")
print("‚Ä¢ Added verifiedContacts computed property")
print("‚Ä¢ Filter contacts to show only verified ones")
print("‚Ä¢ Updated empty state message for verified contacts")
print("‚Ä¢ Removed unverified contact warnings")
print("‚Ä¢ Removed contact count indicator")
print("‚Ä¢ Removed 'Show All Contacts' button")
print("‚Ä¢ Call loadVerifiedContactsOnly() method")